name: drupal-project
recipe: drupal10

config:
  php: "8.3"
  via: nginx
  webroot: web
  xdebug: off
  config:
    vhosts: .lando/nginx.conf
    php: .lando/php.ini
    database: .lando/my.cnf

tooling:
  composer:
    description: "Runs Composer commands"
    cmd:
      - appserver: /usr/local/bin/composer
  drupal:
    description: "Runs Drupal core script with provided arguments"
    cmd:
      - appserver: /app/.lando/drupal.sh
  grumphp:
    description: "Runs grumphp commands"
    cmd:
      - appserver: ./vendor/bin/grumphp
  npm:
    description: "Runs npm commands"
    service: node
  phpunit:
    description: "Runs PHPUnit commands"
    user: www-data
    cmd:
      - appserver: "php /app/vendor/bin/phpunit -c /app/phpunit.xml --testdox"
  regenerate-phpunit-config:
    description: "Regenerates fresh PHPUnit configuration."
    cmd:
      - appserver: /app/.lando/phpunit.sh
  varnishadm:
    description: "Runs varnishadm commands"
    service: varnish
    user: root
  xdebug:
    description: "Loads Xdebug in the selected mode"
    cmd:
      - appserver: /app/.lando/xdebug.sh
    user: root

services:
  adminer:
    type: lando
    services:
      image: dehy/adminer
      command: /bin/s6-svscan /etc/services.d
    overrides:
      volumes:
        # Mount Adminer configuration files.
        - ./.lando/adminer.conf:/etc/php8/php-fpm.d/www_overrides.conf
        - ./.lando/adminer.php:/var/www/html/adminer.php
    run_as_root:
      - /app/.lando/adminer.sh
  appserver:
    # Install dependencies when building lando.
    build:
      - "composer install"
    # Uncomment if you need a specific timezone for example for integrations
    #run_as_root:
    #  - ln -snf /usr/share/zoneinfo/Europe/Helsinki /etc/localtime
    #  - echo "Europe/Helsinki" > /etc/timezone
    # Uncomment this if you need to edit files inside the container
    #build_as_root:
    #  - apt update -y
    #  - apt install vim -y
    overrides:
      environment:
        # Database credentials are defined in the .lando/.env file
        # to be available in both the adminer and appserver containers.
        HASH_SALT: notsosecurehash
        ENVIRONMENT_NAME: lando
        DRUSH_OPTIONS_URI: https://drupal-project.lndo.site
        SMTP_ADDRESS: mailpit:1025
        VARNISH_ADMIN_HOST: varnish
        # Support debugging with XDEBUG 3.
        XDEBUG_MODE:
        PHP_IDE_CONFIG: serverName=appserver
        # PHPUnit settings. @see: .lando/phpunit.sh
        MINK_DRIVER_ARGS_WEBDRIVER: '["chrome", {"browserName":"chrome","chromeOptions":{"args":["--disable-gpu","--headless"]}}, "http://chrome:9515"]'
  chrome:
    type: lando
    services:
      image: drupalci/webdriver-chromedriver:production
      command: chromedriver --log-path=/tmp/chromedriver.log --verbose --whitelisted-ips=
  database:
    type: "mariadb:10.6.18"
    # Assign a static port if you need to access the database from your host machine.
    # @see: https://docs.lando.dev/guides/external-access.html
    # portforward: 34567
  # elasticsearch:
  #   type: lando
  #   services:
  #     image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.0"
  #     command: "/bin/tini -- /usr/local/bin/docker-entrypoint.sh eswrapper"
  #     user: elasticsearch
  #     environment:
  #       ES_JAVA_OPTS: "-Xms512m -Xmx512m"
  #       discovery.type: "single-node"
  #       bootstrap.memory_lock: "true"
  #       # Allow CORS requests.
  #       http.cors.enabled: "true"
  #       http.cors.allow-origin: "*"
  #     ulimits:
  #       memlock:
  #         soft: "-1"
  #         hard: "-1"
  #     ports:
  #       - "9200:9200"
  #     volumes:
  #       - esdata:/usr/share/elasticsearch/data
  #   # Install ES plugins.
  #   build_as_root:
  #     - elasticsearch-plugin install analysis-icu analysis-ukrainian
  #   volumes:
  #     esdata:
  #       driver: local
  # kibana:
  #   type: lando
  #   services:
  #     image: "docker.elastic.co/kibana/kibana:7.17.0"
  #     command: "/bin/tini -- /usr/local/bin/kibana-docker"
  #     user: kibana
  #     ports:
  #       - "5601:5601"
  mailpit:
    type: lando
    api: 3
    ssl: true
    sslExpose: false
    services:
      image: axllent/mailpit
      volumes:
       - .lando/data-mailpit:/data
      ports:
        - "8025"  # Web UI
        - "1025"  # SMTP
      environment:
        MP_MAX_MESSAGES: 5000
        MP_DATA_FILE: /data/mailpit.db
        MP_SMTP_AUTH_ACCEPT_ANY: 1
        MP_SMTP_AUTH_ALLOW_INSECURE: 1
      command: "/mailpit"
  node:
    type: "node:20"
    build:
      - "npm install"
  varnish:
    type: "varnish:6"
    backends:
      - appserver_nginx
    config:
      vcl: .lando/varnish.vcl
    ssl: true
    overrides:
      environment:
        ADMIN_PORT: ":6082"
        VARNISH_ALLOW_UNRESTRICTED_PURGE: "true"

proxy:
  adminer:
    - adminer.drupal-project.lndo.site
  mailpit:
    - mail.lndo.site:8025
  # elasticsearch:
  #   - elasticsearch.lndo.site:9200
  # kibana:
  #   - kibana.lndo.site:5601
  varnish:
    - varnish.drupal-project.lndo.site

events:
  post-db-import:
    - appserver: "cd $LANDO_WEBROOT && drush cache:rebuild -y && drush @local user:login"

env_file:
  - .lando/.env
  # uncomment when you need a personal .env file which is not committed to the repository
  # - .env

# Tested with Lando version
version: v3.21
